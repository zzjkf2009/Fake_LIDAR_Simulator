<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="enable_record" default="true"/>
  <arg name="x_pos" default=" -6.0"/>
  <arg name="y_pos" default="-1.5"/>
  <arg name="z_pos" default="0.0"/>
  <!--arg name ="world_file" default ="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world" /-->
  <!--arg name ="world_file" default ="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world" /-->
<arg name ="world_file" default ="$(find fake_scanner)/world/Testmapping.world" />

  <node pkg="tf" type="static_transform_publisher" name="camera_tf" args="-1.95 -0.55 2.0 -1.58 0 -1.58 /odom /camera_link 100"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_file)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

<node pkg="rosbag" name="record" type="record" args="-a -O fake_scann.bag -x /camera/(.*)" if="$(arg enable_record)">
</node>

<include file = "$(find turtlebot3_teleop)/launch/turtlebot3_teleop_key.launch" launch-prefix="xterm -e" output="screen"> </include>
</launch>
